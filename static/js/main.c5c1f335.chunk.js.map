{"version":3,"sources":["Context.js","components/Quote.js","components/Buttons.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","quote","setQuote","author","setAuthor","click","setClick","color","setColor","prevQuoteRef","useRef","prevAuthorRef","root","document","querySelector","useEffect","fetch","then","response","json","data","content","randomColor","luminosity","style","setProperty","current","Provider","value","previousQuote","prevQuote","prevAuthor","Quote","useContext","id","className","Math","random","Buttons","twitterLink","encodeURIComponent","href","onClick","state","App","ReactDOM","render","getElementById"],"mappings":"iOAGMA,EAAUC,IAAMC,gBAEtB,SAASC,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SAAY,EACXC,mBAAS,IADE,mBAC9BC,EAD8B,KACvBC,EADuB,OAETF,mBAAS,IAFA,mBAE9BG,EAF8B,KAEtBC,EAFsB,OAGXJ,oBAAS,GAHE,mBAG9BK,EAH8B,KAGvBC,EAHuB,OAIXN,mBAAS,IAJE,mBAI9BO,EAJ8B,KAIvBC,EAJuB,KAK/BC,EAAeC,mBACfC,EAAgBD,mBAEhBE,EAAOC,SAASC,cAAc,SAwBpC,OAtBAC,qBAAU,WACRC,MAAM,kCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLlB,EAASkB,EAAKC,SACdjB,EAAUgB,EAAKjB,QACfK,EAASc,IAAY,CAAEC,WAAY,UACnCX,EAAKY,MAAMC,YAAY,YAAalB,GACpCE,EAAaiB,QAAUzB,EACvBU,EAAce,QAAUvB,OAE3B,CAACE,IAYF,cAACV,EAAQgC,SAAT,CACEC,MAAO,CACL3B,QACAE,SACA0B,cAdN,WACE,IAAIC,EAAYrB,EAAaiB,QACzBK,EAAapB,EAAce,QAC/BxB,EAAS4B,GACT1B,EAAU2B,GACVvB,EAASc,IAAY,CAAEC,WAAY,UACnCX,EAAKY,MAAMC,YAAY,YAAalB,IAShCD,YALJ,SAQGP,I,MC1BQiC,MAjBf,WAAkB,IACR/B,EAAUgC,qBAAWtC,GAArBM,MACAE,EAAW8B,qBAAWtC,GAAtBQ,OAER,OACE,qCACE,oBAAG+B,GAAG,OAAN,UACE,mBAAGC,UAAU,uBACZlC,IAFemC,KAAKC,UAIvB,oBAAGH,GAAG,SAAN,eACK/B,IADeiC,KAAKC,cCmBhBC,MA7Bf,WAAoB,IACVT,EAAkBI,qBAAWtC,GAA7BkC,cACAvB,EAAa2B,qBAAWtC,GAAxBW,SACAL,EAAUgC,qBAAWtC,GAArBM,MACAE,EAAW8B,qBAAWtC,GAAtBQ,OAEFoC,EAAW,gDAA4CC,mBAAmB,IAAD,OACzEvC,EADyE,eAC7DE,KAGlB,OACE,sBAAK+B,GAAG,cAAR,UACE,qBAAKC,UAAU,mBAAf,SACE,mBAAGM,KAAMF,EAAaL,GAAG,cAAzB,SACE,mBAAGC,UAAU,wBAGjB,sBAAKA,UAAU,oBAAf,UACE,wBAAQD,GAAG,aAAaQ,QAAS,kBAAMb,KAAvC,4BAGA,wBAAQK,GAAG,YAAYQ,QAAS,kBAAMpC,GAAS,SAACqC,GAAD,OAAYA,MAA3D,8BCNOC,MAXf,WACE,OACE,qBAAKV,GAAG,UAAR,SACE,sBAAKA,GAAG,YAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCNRW,IAASC,OACP,cAAChD,EAAD,UACE,cAAC,EAAD,MAEFe,SAASkC,eAAe,W","file":"static/js/main.c5c1f335.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport randomColor from \"randomcolor\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [click, setClick] = useState(false);\n  const [color, setColor] = useState(\"\");\n  const prevQuoteRef = useRef();\n  const prevAuthorRef = useRef();\n\n  const root = document.querySelector(\":root\");\n\n  useEffect(() => {\n    fetch(\"https://api.quotable.io/random\")\n      .then((response) => response.json())\n      .then((data) => {\n        setQuote(data.content);\n        setAuthor(data.author);\n        setColor(randomColor({ luminosity: \"dark\" }));\n        root.style.setProperty(\"--primary\", color);\n        prevQuoteRef.current = quote;\n        prevAuthorRef.current = author;\n      });\n  }, [click]);\n\n  function previousQuote() {\n    let prevQuote = prevQuoteRef.current;\n    let prevAuthor = prevAuthorRef.current;\n    setQuote(prevQuote);\n    setAuthor(prevAuthor);\n    setColor(randomColor({ luminosity: \"dark\" }));\n    root.style.setProperty(\"--primary\", color);\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        quote,\n        author,\n        previousQuote,\n        setClick,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n","import React, { useContext } from \"react\";\nimport { Context } from \"../Context\";\n\nfunction Quote() {\n  const { quote } = useContext(Context);\n  const { author } = useContext(Context);\n\n  return (\n    <>\n      <p id=\"text\" key={Math.random()}>\n        <i className=\"ri-double-quotes-l\"></i>\n        {quote}\n      </p>\n      <p id=\"author\" key={Math.random()}>\n        - {author}\n      </p>\n    </>\n  );\n}\n\nexport default Quote;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../Context\";\n\nfunction Buttons() {\n  const { previousQuote } = useContext(Context);\n  const { setClick } = useContext(Context);\n  const { quote } = useContext(Context);\n  const { author } = useContext(Context);\n\n  const twitterLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n    `\"${quote}\" - ${author}`\n  )}`;\n\n  return (\n    <div id=\"buttons-bar\">\n      <div className=\"buttons-bar-left\">\n        <a href={twitterLink} id=\"tweet-quote\">\n          <i className=\"ri-twitter-fill\"></i>\n        </a>\n      </div>\n      <div className=\"buttons-bar-right\">\n        <button id=\"prev-quote\" onClick={() => previousQuote()}>\n          Previous Quote\n        </button>\n        <button id=\"new-quote\" onClick={() => setClick((state) => !state)}>\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import \"./App.css\";\n\nimport React from \"react\";\n\nimport Quote from \"./components/Quote\";\nimport Buttons from \"./components/Buttons.js\";\n\nfunction App() {\n  return (\n    <div id=\"wrapper\">\n      <div id=\"quote-box\">\n        <Quote />\n        <Buttons />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ContextProvider } from \"./Context\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}